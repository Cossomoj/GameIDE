#!/bin/bash

# GameIDE Quick Start Script
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./start.sh

set -e

echo "üéÆ GameIDE - AI Game Generator –¥–ª—è –Ø–Ω–¥–µ–∫—Å –ò–≥—Ä"
echo "=============================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    echo "   https://docs.docker.com/get-docker/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Docker daemon
if ! docker info &> /dev/null; then
    echo "‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è  –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    cat > .env << EOF
# AI API Keys (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏)
DEEPSEEK_API_KEY=your_deepseek_api_key_here
OPENAI_API_KEY=your_openai_api_key_here

# Database
DATABASE_URL=postgresql://gameide:gameide_password@postgres:5432/gameide_db
REDIS_URL=redis://redis:6379

# Environment
NODE_ENV=development
LOG_LEVEL=debug

# Paths
GAMES_OUTPUT_PATH=/app/games-output
UPLOADS_PATH=/app/games-output/uploads
TEMPLATES_PATH=/app/games-output/templates

# Frontend
VITE_API_URL=http://localhost:3000
EOF
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
    echo ""
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏ –≤ .env:"
    echo "   - DEEPSEEK_API_KEY (https://platform.deepseek.com/)"
    echo "   - OPENAI_API_KEY (https://platform.openai.com/)"
    echo ""
    echo "üí° –ü—Ä–æ–µ–∫—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ API –∫–ª—é—á–µ–π, –Ω–æ AI —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    echo ""
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p logs/frontend logs/backend logs/redis logs/postgres logs/nginx
mkdir -p games-output/generated games-output/uploads games-output/templates
mkdir -p data/temp

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º GameIDE..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π
echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up --build -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose ps

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
for service in postgres redis backend frontend; do
    echo "   –ü—Ä–æ–≤–µ—Ä–∫–∞ $service..."
    if ! docker compose ps --services --filter "status=running" | grep -q "^${service}$"; then
        echo "   ‚ö†Ô∏è  $service –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏:"
        docker compose logs --tail=10 $service
    else
        echo "   ‚úÖ $service —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
echo "   –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend (http://localhost:5173)..."
for i in {1..20}; do
    if curl -s http://localhost:5173 > /dev/null 2>&1; then
        echo "   ‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
        break
    fi
    if [ $i -eq 20 ]; then
        echo "   ‚ö†Ô∏è  Frontend –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –ø–æ–∑–∂–µ"
    fi
    sleep 2
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º backend
echo "   –ü—Ä–æ–≤–µ—Ä–∫–∞ backend (http://localhost:3000)..."
for i in {1..20}; do
    if curl -s http://localhost:3000 > /dev/null 2>&1; then
        echo "   ‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω"
        break
    fi
    if [ $i -eq 20 ]; then
        echo "   ‚ö†Ô∏è  Backend –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –ø–æ–∑–∂–µ"
    fi
    sleep 2
done

echo ""
echo "üéâ GameIDE –∑–∞–ø—É—â–µ–Ω!"
echo ""
echo "üåê –°–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
echo "   ‚Ä¢ Frontend:   http://localhost:5173"
echo "   ‚Ä¢ Backend:    http://localhost:3000"
echo "   ‚Ä¢ PostgreSQL: localhost:5432"
echo "   ‚Ä¢ Redis:      localhost:6379"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   ‚Ä¢ –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:    docker compose logs -f"
echo "   ‚Ä¢ –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ:      docker compose logs -f <service>"
echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å:                docker compose ps"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞:             docker compose down"
echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:            docker compose restart"
echo "   ‚Ä¢ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞:     docker compose down && docker compose up --build"
echo ""
echo "üîß –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö:"
echo "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:        docker compose logs"
echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop"
echo "   ‚Ä¢ –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç—ã 3000, 5173, 5432, 6379"
echo ""

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä (—Ç–æ–ª—å–∫–æ –Ω–∞ macOS)
if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "üñ•Ô∏è  –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥..."
    echo "   –ù–∞–∂–º–∏—Ç–µ Ctrl+C —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å..."
    sleep 5
    open http://localhost:5173 2>/dev/null || echo "   –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
fi

echo ""
echo "‚ú® –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏–≥—Ä—ã —Å –ø–æ–º–æ—â—å—é AI!"
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs/QUICK_START.md" 